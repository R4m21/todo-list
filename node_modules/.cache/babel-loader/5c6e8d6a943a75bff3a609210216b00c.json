{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\ToloList\\\\src\\\\TodoList\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'; // Create Todo List by user input\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst List = props => {\n  _s();\n\n  const [line, setLine] = useState(false);\n  const [hide, setHide] = useState(true);\n  if (props.value == '') setHide(false);\n\n  const cut = () => setLine(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnlist\",\n      style: true,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: cut,\n        onDoubleClick: () => props.delete(props.id),\n        children: line ? /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 104\n        }, this) : /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 125\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list\",\n        style: {\n          textDecoration: line ? 'line-through' : 'none',\n          color: line ? 'gray' : 'none'\n        },\n        children: props.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 147\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(List, \"q+ftXjzFf+pIiXreQQgtA5rPbW4=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["D:/Project/ToloList/src/TodoList/List.jsx"],"names":["React","useState","ClearIcon","DeleteForeverIcon","List","props","line","setLine","hide","setHide","value","cut","delete","id","textDecoration","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B,C,CAEA;;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACO,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,IAAD,CAA/B;AACA,MAAGI,KAAK,CAACK,KAAN,IAAe,EAAlB,EACID,OAAO,CAAC,KAAD,CAAP;;AACJ,QAAME,GAAG,GAAG,MAAMJ,OAAO,CAAC,IAAD,CAAzB;;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,MAA9B;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEI,GAAjC;AAAsC,QAAA,aAAa,EAAE,MAAIN,KAAK,CAACO,MAAN,CAAaP,KAAK,CAACQ,EAAnB,CAAzD;AAAA,kBAAkFP,IAAI,gBAAC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAAD,gBAAsB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAA5G;AAAA;AAAA;AAAA;AAAA,cADJ,eACsI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,KAAK,EAAE;AAACQ,UAAAA,cAAc,EAACR,IAAI,GAAC,cAAD,GAAgB,MAApC;AAA2CS,UAAAA,KAAK,EAACT,IAAI,GAAC,MAAD,GAAQ;AAA7D,SAA5B;AAAA,kBAAmGD,KAAK,CAACK;AAAzG;AAAA;AAAA;AAAA;AAAA,cADtI;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH,CAbD;;GAAMN,I;;KAAAA,I;AAcN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n// Create Todo List by user input\r\n\r\nconst List = (props) => {\r\n    const [line,setLine] = useState(false);\r\n    const [hide,setHide] = useState(true);\r\n    if(props.value == '')\r\n        setHide(false);\r\n    const cut = () => setLine(true);\r\n    return (\r\n        <>\r\n            <div className='btnlist' style>\r\n                <button className='btn' onClick={cut} onDoubleClick={()=>props.delete(props.id)}>{line?<DeleteForeverIcon/>:<ClearIcon/>}</button><li className='list' style={{textDecoration:line?'line-through':'none',color:line?'gray':'none'}}>{props.value}</li>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default List;"]},"metadata":{},"sourceType":"module"}